;-----------------------------------------------------------------------
; Опис: Програма для читання, сортування та виведення десяткових чисел
;-----------------------------------------------------------------------

.model small
.stack 100H

;-----------------------------------------------------------------------
; Дані
;-----------------------------------------------------------------------

.data
median DW ? ; Змінна для зберігання медіани
average DW ? ; Змінна для зберігання середнього значення
buffer DB 255 DUP(?) ; Буфер для зчитування даних
array DW 10000 DUP(?) ; Масив для зберігання десяткових чисел
count DW 0 ; Кількість прочитаних чисел

;-----------------------------------------------------------------------
; Процедури
;-----------------------------------------------------------------------

.code
main PROC
    mov AX, @DATA
    mov DS, AX

    ; Зчитування даних
    mov AH, 1 ; Системний виклик читання
    mov BX, 0 ; Дескриптор стандартного ввідного потоку (STDIN)
    mov CX, 255 ; Максимальна довжина рядка
    mov DX, offset buffer ; Адреса буфера
    int 21h ; Зчитування даних

    ; Перетворення рядка в масив десяткових чисел
    mov SI, offset buffer
    mov DI, offset array
    mov CX, 0 ; Кількість прочитаних символів

    call read_next_char

    ; Сортування масиву
    call bubble_sort ; Сортування методом бульбашки

    ; Обчислення медіани та середнього значення
    call calc_median ; Отримати значення медіани
    call calc_average ; Отримати значення середнього значення

    ; Виведення медіани та середнього значення
    call print_median ; Вивести медіанa
    call print_average ; Вивести середнє значення

    main ENDP

;-----------------------------------------------------------------------
; Процедура зчитування наступного символу
;-----------------------------------------------------------------------

read_next_char PROC
    mov AL, [SI]
    cmp AL, 13 ; CR
    je read_next_char_done ; Кінець рядка
    cmp AL, 10 ; LF
    je read_next_char_done ; Кінець рядка

    ; Зберігання цифри
    mov BX, 10 ; Множення на 10
    mul BX
    sub AL, 30h ; Перетворення ASCII в цифру
    add [DI], AX ; Додати цифру до числа

    inc CX ; Збільшити кількість прочитаних символів
    inc SI ; Перехід до наступного символу

    ret

    read_next_char_done:
    ret ; Повернутися з процедури
read_next_char ENDP

;-----------------------------------------------------------------------
; Процедура обробки негативних чисел
;-----------------------------------------------------------------------

read_neg PROC
    mov AX, [DI] ; Завантажити число
    neg AX       ; Інвертувати знак
    mov [DI], AX ; Зберегти число з негативним знаком
    inc CX       ; Збільшити кількість прочитаних символів
    inc SI       ; Перехід до наступного символу

    ret
read_neg ENDP

;-----------------------------------------------------------------------
; Сортування методом бульбашки (Bubble Sort)
;-----------------------------------------------------------------------

bubble_sort PROC
    mov CX, count
    dec CX  ; Count - 1

outerLoop:
    push CX ; Зберегти зовнішній лічильник
    mov CX, count
    dec CX

innerLoop:
    mov AX, [SI]
    cmp AX, [SI+2]
    jl next_step
    xchg [SI+2], AX 
    mov [SI], AX
next_step:
    add SI, 2
    loop innerLoop
    pop CX
    loop outerLoop

    ret
bubble_sort ENDP

;-----------------------------------------------------------------------
; Обчислення медіани
;-----------------------------------------------------------------------

calc_median PROC
    mov SI, offset array
    mov CX, count
    shr CX, 1 ; Обчислення індексу медіани
    mov BX, 2 ; Множення на 2
    mul BX
    add SI, BX ; Додати результат множення до SI

    mov AX, [SI]
    ret
calc_median ENDP

;-----------------------------------------------------------------------
; Обчислення середнього значення
;-----------------------------------------------------------------------

calc_average PROC
    mov SI, offset array
    mov AX, 0
    mov CX, count

average_loop:
    add AX, [SI]
    add SI, 2
    loop average_loop

    mov BX, count
    div BX  ; Ділення суми на кількість елементів
    ret 
calc_average ENDP

;-----------------------------------------------------------------------
; Виведення медіани
;-----------------------------------------------------------------------

print_median PROC
    push AX
    push DX
    mov AX, median ; Отримати значення медіани
    mov DX, 10 ; Десятинкова система числення
    mov AH, 9 ; Системний виклик друку
    int 21h ; Вивести медіанa
    pop DX
    pop AX

    ret
print_median ENDP

;-----------------------------------------------------------------------
; Виведення середнього значення
;-----------------------------------------------------------------------

print_average PROC
    push AX
    push DX
    mov AX, average ; Отримати значення середнього
    mov DX, 10 ; Десятинкова система числення
    mov AH, 9 ; Системний виклик друку
    int 21h ; Вивести середнє значення
    pop DX
    pop AX

    ret
print_average ENDP

end main
